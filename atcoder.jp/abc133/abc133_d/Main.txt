import bisect,collections,copy,heapq,itertools,math,string,sys,queue
input = lambda: sys.stdin.readline().rstrip()
def I(): return input()
def IS(): return input().split()
def II(): return int(input())
def IIS(): return map(int,input().split())
def LIIS(): return list(map(int,input().split()))
ragen=range
INF=10**10
MOD=10**9+7
##############################################################################
n=II()
A=LIIS()
sm=sum(A)
for i in range(2,n,2):
    sm-=A[i]*2
x=sm
ans=[x]
for i in range(1,n):
    ans.append(A[i]*2-x)
    x=A[i]*2-x

for i in range(n):
    print(ans[i-1])