import bisect,collections,copy,heapq,itertools,math,string,sys,queue
input = lambda: sys.stdin.readline().rstrip()
def I(): return input()
def IS(): return input().split()
def II(): return int(input())
def IIS(): return map(int,input().split())
def LIIS(): return list(map(int,input().split()))
ragen=range
INF=10**10
MOD=10**9+7
##############################################################################
j,a,b,c,d,e,f,g,h,i=IIS()
dic={j:0,a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9}
n=II()
li=[]
li2=[]
for i in range(n):
    val=list(I())
    li2.append(int("".join(val)))
    for j in range(len(val)):
        val[j]=str(dic[int(val[j])])
    li.append((int("".join(val)),i))
li.sort(key=lambda x:x[0])
for i in li:
    print(li2[i[1]])